10)	non-parametric Locally Weighted Regression algorithm
from sklearn.datasets import load_boston
from sklearn.neighbors import KNeighborsRegressor 
from sklearn.model_selection import train_test_split 
from sklearn.metrics import mean_squared_error

# Load the Boston Housing dataset 
boston = load_boston()

# Split the data into training and testing sets
 
X_train, X_test, y_train, y_test = train_test_split(boston.data, boston.target, test_size=0.3, random_state=42)


# Create a KNeighborsRegressor with weights='distance' and n_neighbors=5 

lwr = KNeighborsRegressor(weights='distance', n_neighbors=5)

# Fit the regressor to the training data 
lwr.fit(X_train, y_train)

# Predict the target values of the test data 
y_pred = lwr.predict(X_test)

# Calculate the mean squared error of the regressor 

mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)
